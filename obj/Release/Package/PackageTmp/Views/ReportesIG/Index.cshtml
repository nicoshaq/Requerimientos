@model IEnumerable<SUI_Reportes.Models.ReportesIG>

@{
    ViewBag.Title = "Index";

    Layout = "~/Views/Shared/_Layout.cshtml";

}
<input type="hidden" id="success"
       value="@TempData["success"]" />
<input type="hidden" id="info"
       value="@TempData["info"]" />
<input type="hidden" id="warning"
       value="@TempData["warning"]" />
<input type="hidden" id="error"
       value="@TempData["error"]" />


<div class="row wrapper border-bottom white-bg page-heading">
    <div class="col-lg-10">
        <h2>Reportes Sistema Inv-Gate</h2>
        <ol class="breadcrumb">
            <li>
                <a href="@Url.Action("Dashboard_1", "Dashboards")">Home</a>
            </li>
            <li>
                <a>Reportes</a>
            </li>
            <li class="active">
                <strong>Reportes</strong>
            </li>
        </ol>
    </div>
    <div class="col-lg-2">
    </div>
</div>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="row">
        <div class="col-lg-12">
            <div class="ibox float-e-margins" id="ibox2">
                <div class="ibox-title">
                    <h5>Reportes Sistema Inv-Gate</h5>
                    <div class="ibox-tools">
                        <a class="collapse-link">
                            <i class="fa fa-chevron-up"></i>
                        </a>
                        <a class="dropdown-toggle" data-toggle="dropdown" href="#">
                            <i class="fa fa-wrench"></i>
                        </a>
                        <ul class="dropdown-menu dropdown-user">
                            <li>
                                <a href="#">Config option 1</a>
                            </li>
                            <li>
                                <a href="#">Config option 2</a>
                            </li>
                        </ul>
                        <a class="close-link">
                            <i class="fa fa-times"></i>
                        </a>
                    </div>
                </div>
                <div class="ibox-content">
                
                        <div class="sk-spinner sk-spinner-wave">
                            <div class="sk-rect1"></div>
                            <div class="sk-rect2"></div>
                            <div class="sk-rect3"></div>
                            <div class="sk-rect4"></div>
                        </div>

                        @using (Html.BeginForm())
                        {
                            <div class="form-group form-inline" id="data_5">
                                @*<label class="font-normal">Range select</label>*@
                                <div class="input-daterange input-group" id="datepicker">
                                    <input type="text" id="comienzo" class="input-sm form-control" name="start" placeholder="Fecha desde" />
                                    <span class="input-group-addon">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span>
                                    <input type="text" id="final" class="input-sm form-control" name="end" placeholder="fecha hasta" />

                                </div>
                                <div class="btn-group">

                                    <input type="submit" value="Filtrar" class="btn btn-primary" id="btngetdata">
                                </div>

                            </div>

                        }

                        @*<form class='filter-form form-inline'>
                <h3>Filtros</h3>
                <div class="form-group">
                    <label>Subtipo :</label>
                    <input type='text' value='' class='filter'>
                    <label>Id Externo :</label>
                    <input type='text' value='' class='filter2'>
                    <label>Area:</label>
                    <input type='text' value='' class='filter3'>
                </div>
            </form>*@

                        <div class="ibox-content">
                            <form role="form" class="form-inline">
                                <div class="form-group">
                                    <label for="exampleInputEmail2" class="sr-only">Email address</label>
                                    <input type="email" placeholder="Cliente" id="exampleInputEmail2" class="form-control filter">
                                </div>

                                <div class="form-group">
                                    <label for="exampleInputEmail2" class="sr-only">Email address</label>
                                    <input type="email" placeholder="Origen" id="exampleInputEmail2" class="form-control filter2">
                                </div>

                                <div class="form-group">
                                    <label for="exampleInputEmail2" class="sr-only">Email address</label>
                                    <input type="email" placeholder="Titulo" id="exampleInputEmail2" class="form-control filter3">
                                </div>





                            </form>



                        </div>





                        <table id="tabla" class="table table-striped table-bordered table-hover dataTables-example">
                            <thead>
                                <tr>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Cliente)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Tipo)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Origen)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Prioridad)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Titulo)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Mesa_ayuda)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Agente)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Fecha)
                                    </th>

                                    <th>
                                        @Html.DisplayNameFor(model => model.Idlote)
                                    </th>

                                </tr>
                            </thead>
                            <tbody>

                                @foreach (var item in Model)
                                {
                                    <tr>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Cliente)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Tipo)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Origen)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Prioridad)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Titulo)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Mesa_ayuda)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Agente)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Fecha)
                                        </td>

                                        <td>
                                            @Html.DisplayFor(modelItem => item.Idlote)
                                        </td>

                                    </tr>
                                }

                            </tbody>
                        </table>
                    </div>
            </div>
        </div>
    </div>
</div>


  






@section Styles {
@Styles.Render("~/plugins/awesomeCheckboxStyles")
@Styles.Render("~/plugins/clockpickerStyles")
@Styles.Render("~/plugins/dateRangeStyles")
@Styles.Render("~/Content/plugins/iCheck/iCheckStyles")
@Styles.Render("~/Content/plugins/chosen/chosenStyles")
@Styles.Render("~/plugins/switcheryStyles")
@Styles.Render("~/plugins/jasnyBootstrapStyles")
@Styles.Render("~/plugins/nouiSliderStyles")
@Styles.Render("~/plugins/dataPickerStyles")
@Styles.Render("~/Content/plugins/ionRangeSlider/ionRangeStyles")
@Styles.Render("~/plugins/imagecropperStyles")
@Styles.Render("~/Content/plugins/colorpicker/colorpickerStyles")
@Styles.Render("~/plugins/select2Styles")
@Styles.Render("~/plugins/touchSpinStyles")
@Styles.Render("~/plugins/tagInputsStyles")
@Styles.Render("~/plugins/duallistStyles")
    @Styles.Render("~/Content/plugins/dataTables/dataTablesStyles")
@Styles.Render("~/plugins/toastrStyles")
}
@section Scripts {
@Scripts.Render("~/plugins/iCheck")
@Scripts.Render("~/plugins/dataPicker")
@Scripts.Render("~/plugins/ionRange")
@Scripts.Render("~/plugins/nouiSlider")
@Scripts.Render("~/plugins/jasnyBootstrap")
@Scripts.Render("~/plugins/switchery")
@Scripts.Render("~/plugins/chosen")
@Scripts.Render("~/plugins/knob")
@Scripts.Render("~/plugins/imagecropper")
@Scripts.Render("~/plugins/colorpicker")
@Scripts.Render("~/plugins/clockpicker")
@Scripts.Render("~/plugins/dateRange")
@Scripts.Render("~/plugins/select2")
@Scripts.Render("~/plugins/touchSpin")
@Scripts.Render("~/plugins/tagInputs")
@Scripts.Render("~/plugins/duallist")
    @Scripts.Render("~/plugins/dataTables")
@Scripts.Render("~/plugins/toastr")
    <script type="text/javascript">




        $.fn.dataTable.ext.search.push(
    function (settings, data, dataIndex) {
        var min = parseInt($('#min').val(), 10);
        var max = parseInt($('#max').val(), 10);
        var fecha = parseFloat(data[3]) || 0; // use data for the age column

        if ((isNaN(min) && isNaN(max)) ||
             (isNaN(min) && fecha <= max) ||
             (min <= fecha && isNaN(max)) ||
             (min <= fecha && fecha <= max)) {
            return true;
        }
        return false;
    }
);





        $(document).ready(function () {

            $('#btngetdata').on('click', function () {

                $('#ibox1').children('.ibox-content').toggleClass('sk-loading');
                $('#ibox2').children('.ibox-content').toggleClass('sk-loading');

            })


            $(function () {
                var displayMessage = function (message, msgType) {
                    toastr.options = {
                        "closeButton": true,
                        "debug": false,
                        "newestOnTop": false,
                        "progressBar": true,
                        "positionClass": "toast-top-right",
                        "preventDuplicates": false,
                        "onclick": null,
                        "showDuration": "300",
                        "hideDuration": "1000",
                        "timeOut": "5000",
                        "extendedTimeOut": "1000",
                        "showEasing": "swing",
                        "hideEasing": "linear",
                        "showMethod": "fadeIn",
                        "hideMethod": "fadeOut"
                    };
                    toastr[msgType](message);
                };

                if ($('#success').val()) {
                   
                    displayMessage($('#success').val(), 'success');
                   
                   
                }
                if ($('#info').val()) {
                    
                    displayMessage($('#info').val(), 'info');
                }
                if ($('#warning').val()) {
                    displayMessage($('#warning').val(), 'warning');
                }
                if ($('#error').val()) {
                    displayMessage($('#error').val(), 'error');
                }
            });












            $('#data_1 .input-group.date').datepicker({
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                calendarWeeks: true,
                autoclose: true
            });

            $('#data_2 .input-group.date').datepicker({
                startView: 1,
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });

            $('#data_3 .input-group.date').datepicker({
                startView: 2,
                todayBtn: "linked",
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });

            $('#data_4 .input-group.date').datepicker({
                minViewMode: 1,
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                todayHighlight: true
            });

            $('#data_5 .input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true
            });



            $('.dataTables-example').DataTable({
                pageLength: 25,
                dom: '<"html5buttons"B>lTfgitp',
                buttons: [
                    { extend: 'copy' },
                    { extend: 'csv' },
                    { extend: 'excel', title: 'Reportes' },
                    { extend: 'pdf', title: 'Reportes', orientation: 'landscape', pageSize: "LEGAL" },

                    {
                        extend: 'print',
                        customize: function (win) {
                            $(win.document.body).addClass('white-bg');
                            $(win.document.body).css('font-size', '10px');

                            $(win.document.body).find('table')
                                    .addClass('compact','width:100%')
                                    .css('font-size', 'inherit');
                        }
                    }
                ]




            });




            var dtable = $('#tabla').DataTable();

            $('.filter').on('keyup change', function () {
                dtable
                  .column(0).search(this.value)
                  //.column(4).search(this.value)

                  .draw();
            });

            $('.filter2').on('keyup change', function () {
                dtable
                  .column(2).search(this.value)

                  .draw();
            });

            $('.filter3').on('keyup change', function () {
                dtable
                  .column(4).search(this.value)

                  .draw();
            });

            $(".dataTables_filter input").on('keyup change', function () {
                //clear column search values
                dtable.columns().search('');
                //clear input values
                $('.filter').val('');
            });


            });





    </script>
}


